type: edu
custom_name: stage2
files:
- name: src/solver/Main.java
  visible: true
  text: |
    package solver;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/SolverTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.TestCase;
    import solver.Main;

    import java.util.Arrays;
    import java.util.List;
    import java.util.Scanner;

    import static java.lang.Math.abs;


    public class SolverTest extends StageTest<String> {

        public SolverTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            List<TestCase<String>> tests = List.of(
                new TestCase<String>()
                    .setInput("4 5 7\n3 9 9"),
                new TestCase<String>()
                    .setInput("1 2 3\n4 5 6"),
                new TestCase<String>()
                    .setInput("1.2 3.4 5.6\n7.8 9.0 12.3"),
                new TestCase<String>()
                    .setInput("23.21 32.12 65.43\n1 0 1")
            );

            for (var test : tests) {
                test.setAttach(solve(test.getInput()));
            }

            return tests;
        }

        private String solve(String input) {
            Scanner sc = new Scanner(input);

            double a = sc.nextDouble();
            double b = sc.nextDouble();
            double c = sc.nextDouble();
            double d = sc.nextDouble();
            double e = sc.nextDouble();
            double f = sc.nextDouble();

            double y = (f - c * (d / a)) / (e - b * (d / a));
            double x = (c - b * y) / a;

            return x + " " + y;
        }

        @Override
        public CheckResult check(String reply, String clue) {
            try {
                double[] actual = Arrays.stream(reply.split(" ")).mapToDouble(Double::parseDouble).toArray();
                double[] expected = Arrays.stream(clue.split(" ")).mapToDouble(Double::parseDouble).toArray();
                if (actual.length != expected.length) {
                    return CheckResult.wrong("");
                }
                for (int i = 0; i < actual.length; i++) {
                    if (abs(actual[i] - expected[i]) > 0.001) {
                        return CheckResult.wrong("");
                    }
                }
                return CheckResult.correct();
            }
            catch (NumberFormatException ex) {
                return new CheckResult(false, "Can't parse numbers - check if you don't print any additional symbols except a space between the numbers");
            }
        }
    }
  learner_created: false
- name: src/solver/AXEqualsB.java
  visible: true
  text: |
    package solver;

    import java.io.IOException;

    public class AXEqualsB extends EquationSolver {
        double a = 0;
        double b = 0;
        @Override
        public void solve() throws IOException {
            readInput();
            System.out.println((double) b / a);

        }

        @Override
        public void readInput() throws IOException {
            String[] input = reader.readLine().split(" ");
            a = Double.parseDouble(input[0]);
            b = Double.parseDouble(input[1]);

        }
    }
  learner_created: true
- name: src/solver/EquationSolver.java
  visible: true
  text: |
    package solver;

    import java.io.BufferedReader;
    import java.io.IOException;
    import java.io.InputStreamReader;

    public abstract class EquationSolver {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        public abstract void solve() throws IOException;
        public abstract void readInput() throws IOException;

    }
  learner_created: true
- name: src/solver/SystemOfEquations.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/40/stages/210/implement#comment
status: Solved
feedback:
  message: Congratulations! Continue on <a href="https://hyperskill.org/projects/40/stages/210/implement">JetBrains
    Academy</a>
  time: Fri, 13 Nov 2020 01:27:37 UTC
record: 2
